#version 430
layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout(binding = 0, r32ui) uniform uimage3D voxelAlbedo;
layout(binding = 1, rgba8) uniform writeonly image3D voxelRadiance;

vec4 convRGBA8ToVec4(uint val)
{
    return vec4(float((val & 0x000000FF)), 
    float((val & 0x0000FF00) >> 8U), 
    float((val & 0x00FF0000) >> 16U), 
    float((val & 0xFF000000) >> 24U));
}

void main()
{
	uvec3 volumeDimension = imageSize(voxelAlbedo);

	if(gl_GlobalInvocationID.x >= volumeDimension.x ||
		gl_GlobalInvocationID.y >= volumeDimension.y ||
		gl_GlobalInvocationID.z >= volumeDimension.z) return;

	ivec3 writePos = ivec3(gl_GlobalInvocationID);

	uvec4 albedoEnc = imageLoad(voxelAlbedo, writePos);
	vec4 albedo = convRGBA8ToVec4(albedoEnc.x) / 255.0f;
	albedo.a = 1.0f;

	imageStore(voxelRadiance, writePos, albedo);
}